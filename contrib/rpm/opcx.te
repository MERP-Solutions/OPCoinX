policy_module(opcx, 1.100.1)

########################################
#
# Declarations
#

type opcx_t;
type opcx_exec_t;
init_daemon_domain(opcx_t, opcx_exec_t)

permissive opcx_t;

type opcx_initrc_exec_t;
init_script_file(opcx_initrc_exec_t)

type opcx_conf_t;
files_type(opcx_conf_t)

type opcx_var_lib_t;
files_type(opcx_var_lib_t)

type opcx_var_run_t;
files_type(opcx_var_run_t)

type opcx_port_t;
corenet_port(opcx_port_t)

########################################
#
# opcx local policy
#
allow opcx_t self:process { fork };

allow opcx_t self:fifo_file rw_fifo_file_perms;
allow opcx_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(opcx_t, opcx_conf_t, opcx_conf_t)
manage_files_pattern(opcx_t, opcx_conf_t, opcx_conf_t)

manage_dirs_pattern(opcx_t, opcx_var_lib_t, opcx_var_lib_t)
manage_files_pattern(opcx_t, opcx_var_lib_t, opcx_var_lib_t)
files_var_lib_filetrans(opcx_t, opcx_var_lib_t, { dir file })

manage_dirs_pattern(opcx_t, opcx_var_run_t, opcx_var_run_t)
manage_files_pattern(opcx_t, opcx_var_run_t, opcx_var_run_t)

sysnet_dns_name_resolve(opcx_t)
corenet_all_recvfrom_unlabeled(opcx_t)

allow opcx_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(opcx_t)
corenet_tcp_sendrecv_generic_node(opcx_t)
corenet_tcp_sendrecv_all_ports(opcx_t)
corenet_tcp_bind_generic_node(opcx_t)

gen_require(`
    type opcx_port_t;
')
allow opcx_t opcx_port_t:tcp_socket name_bind;

gen_require(`
    type opcx_port_t;
')
allow opcx_t opcx_port_t:tcp_socket name_connect;

domain_use_interactive_fds(opcx_t)

files_read_etc_files(opcx_t)

miscfiles_read_localization(opcx_t)

sysnet_dns_name_resolve(opcx_t)

allow opcx_t opcx_exec_t:file execute_no_trans;
allow opcx_t self:process setsched;
corecmd_exec_ls(opcx_t)
corenet_tcp_connect_http_port(opcx_t)
dev_read_urand(opcx_t)
fs_getattr_xattr_fs(opcx_t)
kernel_read_system_state(opcx_t)
